.quota-game {
  color: #000;
}
.game-control .display, .game-control .control, .game-board .label, .game-board .sum, .game-board .cell {
  height: 64px;
  max-height: 64px;
  min-height: 64px;
  padding: 0;
  background: #fff;
  border: solid 1px #000;
  text-align: center;
  overflow: hidden;
}
.game-board .label, .game-board .sum, .game-board .cell {
    max-width: 64px;
    width: 64px;
    min-width: 64px;
}
.game-board td {
  transition: all ease 0.5s;
  font-size: 0;
}
.game-board td > * {
  font-size: 16px;
}
.game-board td.cell > input.value, .game-board th > input.sum, .game-control th > input.control {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  height: 100%;
  border: none;
  transition: all ease 0.5s;
}
.game-board td.cell > input.value {
  background: #bbb;
}
.game-board td.cell:not([status="-1"]):not([status="0"])::before {
  font-size: 10px;
  content: attr(order);
  position: absolute;
}
.game-board td.cell[status="-1"] > input.value {
  width: calc(100% / 3);
}
.game-board td.cell[status="0"] > input.value, .game-board td.cell[status="1"] > input.value:not(.v-1), .game-board td.cell[status="2"] > input.value:not(.v-2), .game-board td.cell[status="3"] > input.value:not(.v-3) {
  width: 0%;
}
.game-board td.cell[status="1"] > input.value.v-1, .game-board td.cell[status="2"] > input.value.v-2, .game-board td.cell[status="3"] > input.value.v-3 {
  width: 100%;
}
.game-board td.cell[status="-1"]:not(:hover)>input.value {
  display: none;
}
.game-board td.cell:not([status="-1"]), .game-board th.sum[status="0"], .game-board th.label[status="0"] {
  background: #555;
}
.game-board td.cell[status="-1"] > input.value:hover {
  background: #ddd;
}
.game-board td.cell[status="-1"] {
  background: #fff;
}
.game-board td.cell[player="1"] > input.value, .game-board th.sum[status="1"][player="1"], .game-board th.label[status="1"][player="1"], .game-control th.display.score.p-1 {
  background: #f77;
}
.game-board td.cell[player="2"] > input.value, .game-board th.sum[status="1"][player="2"], .game-board th.label[status="1"][player="2"], .game-control th.display.score.p-2 {
  background: #77f;
}
.game-board th > input.sum, .game-board th > input.sum[status="-1"] {
  background: #bbb;
}
.game-board th.sum {
  border: solid 2px black;
}
.game-board th.sum::before {
  content: attr(total) '/' attr(sum);
}
.game-control th.display.score.p-1::before {
  content: 'P1 Score: ';
}
.game-control th.display.score.p-2::before {
  content: 'P2 Score: ';
}
.game-control th.display.score::after {
  content: attr(score);
}
.game-control th.display.turn::before {
  content: 'Turn: ';
}
.game-control th.display.turn::after {
  content: attr(turn);
}
.game-control th.display.game::before {
  content: 'Game: ';
}
.game-control th.display.game::after {
  content: attr(game);
}
